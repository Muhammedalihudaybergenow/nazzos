version: "3.8"
services:
  broker:
    build: .
    restart: always
    volumes:
      - br:/usr/bin
    ports:
      - ${RABBITMQ_PORT}:5672
    env_file:
      - .env
    networks:
      - backend
  api:
    build: ./api-gateway
    restart: always
    ports:
      - ${API_PORT}:3000
    volumes:
      - ./api-gateway:/home/app/api-gateway
      - ./api-gateway/node_modules:/home/app/api-gateway/node_modules
    env_file:
      - .env
    depends_on:
      - users
      - broker
      - token
    networks:
      - backend
  api_cache:
    image: redis:latest
    restart: always
    ports:
      - ${API_REDIS_PORT}:6379
    volumes:
      - api_cache:/usr/bin
    env_file:
      - .env
    networks:
      - backend
  users:
    build: ./users
    restart: always
    volumes:
      - ./users:/home/app/users
      - ./users/node_modules:/home/app/users/node_modules
    depends_on:
      - user_db
      - user_cache
      - broker
    networks:
      - backend
  user_cache:
    image: redis:latest
    restart: always
    ports:
      - ${USER_REDIS_PORT}:6379
    env_file:
      - .env
    volumes:
      - u_cache:/usr/bin
    depends_on:
      - broker
    networks:
      - backend
  user_db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${USERS_DB_USERNAME}
      - POSTGRES_PASSWORD=${USERS_DB_PASSWORD}
      - POSTGRES_DB=${USERS_DB_NAME}
    ports:
      - ${USERS_DB_PORT}:5432
    volumes:
      - u_db:/usr/bin
    depends_on:
      - broker
    networks:
      - backend
  token:
    build: ./tokens
    restart: always
    env_file:
      - .env
    volumes:
      - ./tokens:/home/app/tokens
      - ./tokens/node_modules:/home/app/tokens/node_modules
    depends_on:
      - token_db
      - broker
    networks:
      - backend
  token_db:
    image: bitnami/mongodb:latest
    restart: always
    environment:
      - MONGODB_ROOT_USER=${TOKEN_DB_USERNAME}
      - MONGODB_DATABASE=${TOKEN_DB_NAME}
      - MONGODB_ROOT_PASSWORD=${TOKEN_DB_PASSWORD}
    ports:
      - ${TOKEN_DB_PORT}:27017
    env_file:
      - .env
    volumes:
      - t_db:/usr/bin
    networks:
      - backend
  file:
    build: ./files
    restart: always
    volumes:
      - ./files:/home/app/files
      - ./files/node_modules:/home/app/files/node_modules
    env_file:
      - .env
    ports:
      - ${FILE_PORT}:4000
    depends_on:
      - file_db
      - users
      - file_broker
  file_db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${FILE_DB_USERNAME}
      - POSTGRES_PASSWORD=${FILE_DB_PASSWORD}
      - POSTGRES_DB=${FILE_DB_NAME}
    ports:
      - ${FILE_DB_PORT}:5432
    volumes:
      - f_db:/usr/bin
    networks:
      - backend
  file_broker:
    image: rabbitmq:latest
    restart: always
    volumes:
      - f_br:/usr/bin
    ports:
      - ${FILE_RABBITMQ_PORT}:5672
    env_file:
      - .env
    networks:
      - backend
volumes:
  br: {}
  u_db: {}
  u_cache: {}
  t_db: {}
  api_cache: {}
  f_db: {}
  f_br: {}
networks:
  backend:
    driver: bridge
